<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Augenstern_Y&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-09T10:14:59.549Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Augenstern_Y</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git的基本使用方法</title>
    <link href="http://example.com/2021/04/09/git%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2021/04/09/git%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2021-04-09T08:39:28.000Z</published>
    <updated>2021-04-09T10:14:59.549Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="git的基本使用方法"><a href="#git的基本使用方法" class="headerlink" title="git的基本使用方法"></a>git的基本使用方法</h2><h4 id="一、git下载与安装"><a href="#一、git下载与安装" class="headerlink" title="一、git下载与安装"></a>一、git下载与安装</h4><ol><li><p>在git官网，根据自己电脑系统下载相应的安装包</p></li><li><p>一直点击next，直到出现install，点击install，安装完成后点击finish</p></li><li><p>检查git是否安装ok：</p><p>——Ctrl+r，在弹出框中输入cdm，弹出界面中输入git，回车</p><p><img src="/.com//image-20210409171021227.png"></p></li></ol><h4 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h4><p>​    1. 先在GitHub上注册一个账号，右键Git Bash进行环境配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span>    //（ <span class="string">&quot;username&quot;</span>是自己的账户名）</span><br><span class="line"><span class="comment"># 配置邮箱</span></span><br><span class="line">git config --global user.email <span class="string">&quot;username@email.com&quot;</span>   //(<span class="string">&quot;username@email.com&quot;</span>注册账号时用的邮箱)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看配置是否OK</span></span><br><span class="line">git config --global --list </span><br></pre></td></tr></table></figure><p>​    2. 通过命令获取公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通生成rsa方式（用于多个服务器之间的登录）</span></span><br><span class="line">ssh-keygen -t rsa   </span><br><span class="line">或</span><br><span class="line"><span class="comment"># 针对某个网站的rsa生成方式</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;xxxxx@xxxxx.com&quot;</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看sshkey的内容</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub  </span><br></pre></td></tr></table></figure><p><img src="/.com//image-20210409165605500.png"></p><ol start="3"><li>系统盘目录下（一般在 C:\Users\你的用户名.ssh）</li></ol><p><img src="/.com//image-20210409165800437.png"></p><ol start="4"><li>将id_ras.pub文件里的内容粘贴到到框框内</li></ol><p><img src="/.com//image-20210409165836761.png"></p><ol start="5"><li>最后在项目的终端输入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gltee.com</span><br></pre></td></tr></table></figure><h4 id="三、上传代码"><a href="#三、上传代码" class="headerlink" title="三、上传代码"></a>三、上传代码</h4><h5 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h5><ol><li>进入本地项目目录初始化版本库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化版本库</span></span><br><span class="line">git init  </span><br><span class="line"><span class="comment"># 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 </span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 把添加的文件提交到版本库，并填写提交备注</span></span><br><span class="line">git commit -m <span class="string">&quot;xxx&quot;</span> </span><br></pre></td></tr></table></figure><ol start="2"><li>设置远程仓库地址并提交    </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git remote add origin https://gitee.com/xxxx/xxx.git  //你的远程库地址</span><br><span class="line"><span class="comment"># 提交到远程服务器</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h5 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h5><ol><li>先将仓库clone到本地</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将远程仓库克隆到本地</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/xxxx/xxx.git</span><br></pre></td></tr></table></figure><ol start="2"><li>提交代码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 </span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 把添加的文件提交到版本库，并填写提交备注</span></span><br><span class="line">git commit -m <span class="string">&quot;xxx&quot;</span> </span><br><span class="line"><span class="comment"># 将本地提交推送到远程仓库</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：提交代码到远程仓库前需要先执行（拉取代码到本地）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin 分支名称</span><br></pre></td></tr></table></figure><h4 id="四、Git-更换仓库地址"><a href="#四、Git-更换仓库地址" class="headerlink" title="四、Git 更换仓库地址"></a>四、Git 更换仓库地址</h4><ol><li>查看当前仓库地址信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><ol start="2"><li>更换为新的地址</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://gitee.com/xxxx/xxx.git  //新地址</span><br></pre></td></tr></table></figure><h4 id="五、分支操作"><a href="#五、分支操作" class="headerlink" title="五、分支操作"></a>五、分支操作</h4><ol><li>创建分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建指定名称的分支</span></span><br><span class="line">git branch 分支名 </span><br></pre></td></tr></table></figure><ol start="2"><li>查看分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有分支，* 号代表当前工作分支</span></span><br><span class="line">git branch </span><br><span class="line"><span class="comment"># 查看分支详情，包括分支指向的commitId及提交信息</span></span><br><span class="line">git branch -v </span><br></pre></td></tr></table></figure><ol start="3"><li>切换分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到指定分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建并切换到指定分支 </span></span><br><span class="line">git checkout -b 分支名 </span><br></pre></td></tr></table></figure><p>​    4. 合并分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将指定分支合并到当前分支</span></span><br><span class="line">git merge 分支名 </span><br></pre></td></tr></table></figure><p>​    5. 删除分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除一个干净的分支(即相对当前分支而言该分支没有新的提交记录)</span></span><br><span class="line">git branch -d 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除一个分支</span></span><br><span class="line">git branch -D 分支名</span><br></pre></td></tr></table></figure><p>​    <strong>注意：</strong>删除分支前都需要先切换到其他分支才能进行删除操作</p><ol start="6"><li>分支恢复</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据指定commit创建新分支</span></span><br><span class="line">git branch 分支名 版本号</span><br></pre></td></tr></table></figure><ol start="7"><li>重命名分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m 分支名 newname</span><br></pre></td></tr></table></figure><ol start="8"><li>分支暂存</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将工作暂存</span></span><br><span class="line">git stash </span><br><span class="line"></span><br><span class="line"><span class="comment"># 从暂存区之中进行恢复，恢复的同时也将stash内容删除</span></span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="git" scheme="http://example.com/categories/git/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/03/31/hello-world/"/>
    <id>http://example.com/2021/03/31/hello-world/</id>
    <published>2021-03-31T05:26:33.286Z</published>
    <updated>2021-04-09T08:21:15.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
