<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Augenstern_Y&#39;s blog</title>
  
  
  <link href="https://a08-k.github.io/atom.xml" rel="self"/>
  
  <link href="https://a08-k.github.io/"/>
  <updated>2021-04-30T03:39:27.040Z</updated>
  <id>https://a08-k.github.io/</id>
  
  <author>
    <name>Augenstern_Y</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>同一台电脑配置多个ssh秘钥</title>
    <link href="https://a08-k.github.io/posts/a02ab518.html"/>
    <id>https://a08-k.github.io/posts/a02ab518.html</id>
    <published>2021-04-30T02:58:24.000Z</published>
    <updated>2021-04-30T03:39:27.040Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="同一台电脑配置多个ssh秘钥"><a href="#同一台电脑配置多个ssh秘钥" class="headerlink" title="同一台电脑配置多个ssh秘钥"></a>同一台电脑配置多个ssh秘钥</h2><h3 id="1-删除git之前的配置项"><a href="#1-删除git之前的配置项" class="headerlink" title="1.删除git之前的配置项"></a>1.删除git之前的配置项</h3><p>查看git配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --system --list   //系统级配置</span><br><span class="line">git config --global --list   //全局配置</span><br><span class="line">git config --<span class="built_in">local</span> --list    //当前项目配置</span><br></pre></td></tr></tbody></table></figure><p>删除配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></tbody></table></figure><h3 id="2-生成ssh-key"><a href="#2-生成ssh-key" class="headerlink" title="2.生成ssh key"></a>2.生成ssh key</h3><p>打开git bash 输入以下命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮箱"</span> -f ~/.ssh/id_rsa_01</span><br><span class="line">// -f后面是密钥路径和自定义的文件名id_rsa_01，邮箱可以相同也可以不同</span><br></pre></td></tr></tbody></table></figure><p>直接三次回车生成第一个ssh key</p><p>在当前用户目录的 .ssh 目录下会生成id_rsa_01私钥文件和 id_rsa_01.pub 公钥文件</p><p>登录GitHub，将 id_rsa_01.pub 公钥中的内容添加到里面的key输入框中</p><h3 id="3-生成第二个ssh-key"><a href="#3-生成第二个ssh-key" class="headerlink" title="3.生成第二个ssh key"></a>3.生成第二个ssh key</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"邮箱"</span> -f ~/.ssh/id_rsa_02</span><br><span class="line">// -f后面是密钥路径和自定义的文件名id_rsa_02，邮箱可以相同也可以不同</span><br></pre></td></tr></tbody></table></figure><p>直接三次回车生成第二个ssh key</p><p>在当前用户目录的 .ssh 目录下会生成id_rsa_02私钥文件和 id_rsa_02.pub 公钥文件</p><p>登录Gitee，将 id_rsa_02.pub 公钥中的内容添加到里面的key输入框中</p><h3 id="4-配置config文件"><a href="#4-配置config文件" class="headerlink" title="4.配置config文件"></a>4.配置config文件</h3><p>.ssh 目录下创建一个 config 文本文件，为每个账号配置一个Host节点，主要配置项说明：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Host    　    <span class="comment">#　别名，描述参数的作用范围</span></span><br><span class="line">HostName　    <span class="comment">#　ip或域名</span></span><br><span class="line">IdentityFile　<span class="comment">#　私钥文件路径</span></span><br><span class="line">IdentitiesOnly <span class="comment"># 只接受SSH key 登录</span></span><br><span class="line">PreferredAuthentications　<span class="comment">#　认证方式，强制使用PublicKey验证</span></span><br><span class="line">User　        <span class="comment">#　用户名</span></span><br><span class="line">Port　        <span class="comment">#　ssh端口号，默认22</span></span><br></pre></td></tr></tbody></table></figure><p>执行命令：<code>vi config</code></p><p>输入字母<code>i</code>，进入编辑模式</p><p>config 文件内容：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ~/.ssh/config 配置多个git的ssh-key</span></span><br><span class="line"><span class="comment"># 第一个SSH Key</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    IdentityFile ~/.ssh/github/id_rsa_01</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二个SSH Key</span></span><br><span class="line">Host gitee.com</span><br><span class="line">    HostName gitee.com</span><br><span class="line">    IdentityFile  ~/.ssh/gitee/id_rsa_02</span><br><span class="line">    PreferredAuthentications publickey</span><br></pre></td></tr></tbody></table></figure><p>先按Esc，输入<code>:wq</code>，回车</p><p>在 git bash 中输入以下命令测试该用户的 SSH 密钥是否有效：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></tbody></table></figure><p>在 git bash 中输入以下命令测试该用户的 SSH 密钥是否有效：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com </span><br></pre></td></tr></tbody></table></figure><h3 id="5-为各自仓库配置不同的用户名和邮箱"><a href="#5-为各自仓库配置不同的用户名和邮箱" class="headerlink" title="5.为各自仓库配置不同的用户名和邮箱"></a>5.为各自仓库配置不同的用户名和邮箱</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name <span class="string">'xx'</span> git config --<span class="built_in">local</span> user.email <span class="string">'xx@qq.com'</span> </span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://a08-k.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="git" scheme="https://a08-k.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>vue创建项目</title>
    <link href="https://a08-k.github.io/posts/41222.html"/>
    <id>https://a08-k.github.io/posts/41222.html</id>
    <published>2021-04-12T09:48:15.000Z</published>
    <updated>2021-04-30T05:25:01.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="vue创建项目"><a href="#vue创建项目" class="headerlink" title="vue创建项目"></a>vue创建项目</h1><h3 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h3><h4 id="第一步：先安装node-js和npm。"><a href="#第一步：先安装node-js和npm。" class="headerlink" title="第一步：先安装node.js和npm。"></a>第一步：先安装node.js和npm。</h4><ol><li><p>官网下载node.js并安装（一直next）</p></li><li><p>输入<code>node -v</code> 和npm -v 查询node和npm的版本号</p></li><li><p>配置npm在安装全局模块时的路径和缓存cache的路径</p><ul><li>在node.js安装目录下新建两个文件夹 node_global和node_cache，然后在cmd命令下执行如下两个命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">"D:\Program Files\nodejs\node_global"</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">"D:\Program Files\nodejs\node_cache"</span></span><br></pre></td></tr></tbody></table></figure><ul><li>在“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量” -&gt; 系统变量中新建一个变量名为 “NODE_PATH”，值为“D:\nodejs\node_modules”(自定义)</li></ul><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322170537.png" alt="image-20210322170537657"></p><ul><li>编辑用户变量里的Path，将相应npm的路径改为：D:\Program Files\nodejs\node_global(自定义)</li></ul><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322170708.png" alt="image-20210322170708057"></p><ul><li>测试：在cmd命令下执行 <code>npm install webpack -g </code>，查看自定义的两个文件夹是否生效</li></ul></li></ol><h4 id="第二步：切换镜像源。"><a href="#第二步：切换镜像源。" class="headerlink" title="第二步：切换镜像源。"></a>第二步：切换镜像源。</h4><p>方法一：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局切换镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 查看镜像源使用状态</span></span><br><span class="line">npm config get registry</span><br><span class="line"><span class="comment"># 全局切换官方镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></tbody></table></figure><p>方法二：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm  install  -g  cnpm  --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure><p>方法三：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装nrm</span></span><br><span class="line">npm install -g nrm</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出可供选择的源</span></span><br><span class="line">nrm ls (*表示正在使用的镜像源)</span><br></pre></td></tr></tbody></table></figure><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322164701.png" alt="image-20210322164700957"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到淘宝镜像源</span></span><br><span class="line">nrm use taobao</span><br><span class="line"><span class="comment"># 测试速度</span></span><br><span class="line">nrm <span class="built_in">test</span> npm</span><br></pre></td></tr></tbody></table></figure><h4 id="第三步：安装vue-cli-脚手架-。"><a href="#第三步：安装vue-cli-脚手架-。" class="headerlink" title="第三步：安装vue-cli 脚手架 。"></a>第三步：安装vue-cli 脚手架 。</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装 vue-cli</span></span><br><span class="line">cnpm install vue-cli -g  </span><br></pre></td></tr></tbody></table></figure><p>使用 <code>vue -V</code> （注意 V 大写）查看是否安装成功</p><h4 id="第四步：安装webpack"><a href="#第四步：安装webpack" class="headerlink" title="第四步：安装webpack"></a>第四步：安装webpack</h4><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br></pre></td></tr></tbody></table></figure><p>输入 <code>webpack -v</code> 查看是否安装成功</p><h3 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h3><h4 id="方法一：手动创建"><a href="#方法一：手动创建" class="headerlink" title="方法一：手动创建"></a>方法一：手动创建</h4><h5 id="第一步：进入你想放置项目的文件夹，在命令提示窗口执行如下命令："><a href="#第一步：进入你想放置项目的文件夹，在命令提示窗口执行如下命令：" class="headerlink" title="第一步：进入你想放置项目的文件夹，在命令提示窗口执行如下命令："></a>第一步：进入你想放置项目的文件夹，在命令提示窗口执行如下命令：</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack 项目名称</span><br></pre></td></tr></tbody></table></figure><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322173629.png" alt="image-20210322173629131"></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Target directory exists. Continue? (Y/n) 直接回车默认(然后会下载 vue2.0模板，这里可能需要连代理)</span><br><span class="line"></span><br><span class="line">Project name (vue-test) 直接回车默认</span><br><span class="line"></span><br><span class="line">Project description (A Vue.js project) 直接回车默认</span><br><span class="line"></span><br><span class="line">Author 直接回车默认 &lt;br&gt;Install vue-router? yes</span><br><span class="line"></span><br><span class="line">Use ESLint to lint your code? No</span><br><span class="line"></span><br><span class="line">pick an eslint preset. 默认Standard</span><br><span class="line"></span><br><span class="line">setup unit tests with karma + mocha?No(单元测试不需要)</span><br><span class="line"></span><br><span class="line">setup e2e tests with Nightwatch?No(单元测试不需要)</span><br></pre></td></tr></tbody></table></figure><h5 id="第二步：进入到项目中，启动项目："><a href="#第二步：进入到项目中，启动项目：" class="headerlink" title="第二步：进入到项目中，启动项目："></a>第二步：进入到项目中，启动项目：</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></tbody></table></figure><h4 id="方法二：图形化创建项目"><a href="#方法二：图形化创建项目" class="headerlink" title="方法二：图形化创建项目"></a>方法二：图形化创建项目</h4><h5 id="第一步：创建项目文件夹，启动ui界面"><a href="#第一步：创建项目文件夹，启动ui界面" class="headerlink" title="第一步：创建项目文件夹，启动ui界面"></a>第一步：创建项目文件夹，启动ui界面</h5><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></tbody></table></figure><h5 id="第二步：创建项目"><a href="#第二步：创建项目" class="headerlink" title="第二步：创建项目"></a>第二步：创建项目</h5><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322174601.png" alt="image-20210322174601023"></p><h5 id="第三步：填写项目名"><a href="#第三步：填写项目名" class="headerlink" title="第三步：填写项目名"></a>第三步：填写项目名</h5><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322174631.png" alt="image-20210322174630899"></p><p>第四步：选择预设</p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322175042.png" alt="image-20210322175042373"></p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322181201.png" alt="image-20210322181201293"></p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322181216.png" alt="image-20210322181216513"></p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322181038.png" alt="image-20210322181038141"></p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322175214.png" alt="image-20210322175214259"></p><p>第五步：添加插件</p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322175443.png" alt="image-20210322175443205"></p><p>第六步：项目依赖管理</p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210322175518.png" alt="image-20210322175518272"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://a08-k.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="vue" scheme="https://a08-k.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>git的基本使用方法</title>
    <link href="https://a08-k.github.io/posts/64569.html"/>
    <id>https://a08-k.github.io/posts/64569.html</id>
    <published>2021-04-09T08:39:28.000Z</published>
    <updated>2021-04-30T03:39:55.376Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="git的基本使用方法"><a href="#git的基本使用方法" class="headerlink" title="git的基本使用方法"></a>git的基本使用方法</h2><h4 id="一、git下载与安装"><a href="#一、git下载与安装" class="headerlink" title="一、git下载与安装"></a>一、git下载与安装</h4><ol><li><p>在git官网，根据自己电脑系统下载相应的安装包</p></li><li><p>一直点击next，直到出现install，点击install，安装完成后点击finish</p></li><li><p>检查git是否安装ok：</p><p>——Ctrl+r，在弹出框中输入cdm，弹出界面中输入git，回车</p><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210318175507.png" alt="image-20210318143942082"></p></li></ol><h4 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h4><p>​    1. 先在GitHub上注册一个账号，右键Git Bash进行环境配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.name <span class="string">"username"</span>    //（ <span class="string">"username"</span>是自己的账户名）</span><br><span class="line"><span class="comment"># 配置邮箱</span></span><br><span class="line">git config --global user.email <span class="string">"username@email.com"</span>   //(<span class="string">"username@email.com"</span>注册账号时用的邮箱)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看配置是否OK</span></span><br><span class="line">git config --global --list </span><br></pre></td></tr></tbody></table></figure><p>​    2. 通过命令获取公钥</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通生成rsa方式（用于多个服务器之间的登录）</span></span><br><span class="line">ssh-keygen -t rsa   </span><br><span class="line">或</span><br><span class="line"><span class="comment"># 针对某个网站的rsa生成方式</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxx@xxxxx.com"</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看sshkey的内容</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub  </span><br></pre></td></tr></tbody></table></figure><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210318175518.png" alt="image-20210318144956197"></p><ol start="3"><li>系统盘目录下（一般在 C:\Users\你的用户名.ssh）</li></ol><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210318175533.png" alt="image-20210318145354184"></p><ol start="4"><li>将id_ras.pub文件里的内容粘贴到到框框内</li></ol><p><img src="https://gitee.com/sponge_bob_0/cloudimages/raw/master/img/20210318175550.png" alt="image-20210318145444469"></p><ol start="5"><li>最后在项目的终端输入</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gltee.com</span><br></pre></td></tr></tbody></table></figure><h4 id="三、上传代码"><a href="#三、上传代码" class="headerlink" title="三、上传代码"></a>三、上传代码</h4><h5 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h5><ol><li>进入本地项目目录初始化版本库</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化版本库</span></span><br><span class="line">git init  </span><br><span class="line"><span class="comment"># 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 </span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 把添加的文件提交到版本库，并填写提交备注</span></span><br><span class="line">git commit -m <span class="string">"xxx"</span> </span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>设置远程仓库地址并提交    </li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git remote add origin https://gitee.com/xxxx/xxx.git  //你的远程库地址</span><br><span class="line"><span class="comment"># 提交到远程服务器</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></tbody></table></figure><h5 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h5><ol><li>先将仓库clone到本地</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将远程仓库克隆到本地</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/xxxx/xxx.git</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>提交代码</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件 </span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 把添加的文件提交到版本库，并填写提交备注</span></span><br><span class="line">git commit -m <span class="string">"xxx"</span> </span><br><span class="line"><span class="comment"># 将本地提交推送到远程仓库</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></tbody></table></figure><p><strong>注意</strong>：提交代码到远程仓库前需要先执行（拉取代码到本地）：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin 分支名称</span><br></pre></td></tr></tbody></table></figure><h4 id="四、Git-更换仓库地址"><a href="#四、Git-更换仓库地址" class="headerlink" title="四、Git 更换仓库地址"></a>四、Git 更换仓库地址</h4><ol><li>查看当前仓库地址信息</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>更换为新的地址</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://gitee.com/xxxx/xxx.git  //新地址</span><br></pre></td></tr></tbody></table></figure><h4 id="五、分支操作"><a href="#五、分支操作" class="headerlink" title="五、分支操作"></a>五、分支操作</h4><ol><li>创建分支</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建指定名称的分支</span></span><br><span class="line">git branch 分支名 </span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>查看分支</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有分支，* 号代表当前工作分支</span></span><br><span class="line">git branch </span><br><span class="line"><span class="comment"># 查看分支详情，包括分支指向的commitId及提交信息</span></span><br><span class="line">git branch -v </span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>切换分支</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到指定分支</span></span><br><span class="line">git checkout 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建并切换到指定分支 </span></span><br><span class="line">git checkout -b 分支名 </span><br></pre></td></tr></tbody></table></figure><p>​    4. 合并分支</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将指定分支合并到当前分支</span></span><br><span class="line">git merge 分支名 </span><br></pre></td></tr></tbody></table></figure><p>​    5. 删除分支</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除一个干净的分支(即相对当前分支而言该分支没有新的提交记录)</span></span><br><span class="line">git branch -d 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制删除一个分支</span></span><br><span class="line">git branch -D 分支名</span><br></pre></td></tr></tbody></table></figure><p>​    <strong>注意：</strong>删除分支前都需要先切换到其他分支才能进行删除操作</p><ol start="6"><li>分支恢复</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据指定commit创建新分支</span></span><br><span class="line">git branch 分支名 版本号</span><br></pre></td></tr></tbody></table></figure><ol start="7"><li>重命名分支</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m 分支名 newname</span><br></pre></td></tr></tbody></table></figure><ol start="8"><li>分支暂存</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将工作暂存</span></span><br><span class="line">git stash </span><br><span class="line"></span><br><span class="line"><span class="comment"># 从暂存区之中进行恢复，恢复的同时也将stash内容删除</span></span><br><span class="line">git stash pop</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://a08-k.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="git" scheme="https://a08-k.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://a08-k.github.io/posts/16107.html"/>
    <id>https://a08-k.github.io/posts/16107.html</id>
    <published>2021-03-31T05:26:33.286Z</published>
    <updated>2021-04-21T07:15:12.904Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
